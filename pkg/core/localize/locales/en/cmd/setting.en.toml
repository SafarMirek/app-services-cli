[setting.cmd.description.short]
one = 'Configure settings of a Service Registry instance'

[setting.cmd.description.long]
one = '''
Configure settings of a Service Registry instance
'''

[setting.cmd.example]
one = '''
## List all settings of the current Service Registry instance
$ rhoas service-registry setting list

## Set the value of setting
$ rhoas service-registry setting set --name registry.ccompat.legacy-id-mode.enabled --value true
'''

[setting.list.cmd.description.short]
one = 'List settings'

[setting.list.cmd.description.long]
one = 'List all settings with their values and types'

[setting.list.cmd.example]
one = '''
## List all settings of the current Service Registry
$ rhoas service-registry setting list

## List all settings of a specific Service Registry instance
$ rhoas service-registry setting list --instance-id=8ecff228-1ffe-4cf5-b38b-55223885ee00
'''

[setting.get.cmd.description.short]
one = 'Get value of the setting'

[setting.get.cmd.description.long]
one = 'Get formatted setting value and other information'

[setting.get.cmd.example]
one = '''
## Get setting by name
$ rhoas service-registry setting get --name registry.ccompat.legacy-id-mode.enabled

## Get setting in yaml format by name
$ rhoas service-registry setting get --name registry.ccompat.legacy-id-mode.enabled --output yaml
'''

[setting.get.cmd.flag.settingName.description]
one = 'Name of the setting'

[setting.get.input.settingName.message]
one = 'Name of the setting:'

[setting.set.cmd.description.short]
one = 'Set value of the setting'

[setting.set.cmd.description.long]
one = 'Set value of the setting to a specific value or reset to default'

[setting.set.cmd.example]
one = '''
## Set value of setting by name
$ rhoas service-registry setting set --name registry.ccompat.legacy-id-mode.enabled --value true

## Reset value of setting by name
$ rhoas service-registry setting set --name registry.ccompat.legacy-id-mode.enabled --default
'''

[setting.set.cmd.flag.settingName.description]
one = 'Name of the setting'

[setting.set.input.settingName.message]
one = 'Name of the setting:'

[setting.set.input.value.message]
one = 'New value:'

[setting.set.cmd.flag.value.description]
one = 'New value of the setting'

[setting.set.cmd.flag.default.description]
one = 'Restore value of the setting to default'

[setting.set.log.info.settingSet]
one = 'Successfully updated settings for update'

[setting.set.log.info.settingReset]
one = 'Setting was successfully reset to default'

[setting.set.warning.valueignored]
one = 'Value is ignore while setting is being restored to default'

